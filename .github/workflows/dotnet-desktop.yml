# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on: 
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.200

    - name: Restore dependencies
      run: dotnet restore ./src/techchallenge-microservico-pedido/techchallenge-microservico-pedido.sln

    - name: Build
      run: dotnet build ./src/techchallenge-microservico-pedido/techchallenge-microservico-pedido.sln --no-restore

    - name: Tests
      run: dotnet test ./src/techchallenge-microservico-pedido/techchallenge-microservico-pedido.sln


    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Docker Login
      run: aws ecr get-login-password --region ${{secrets.AWS_REGION}} | docker login --username AWS --password-stdin ${{ secrets.AWS_REGISTRY_URL }}

    - name: Build and Push Docker images
      run: |
        cd src
        cd techchallenge-microservico-pedido
        docker build -t ms-pedido-img:latest -f techchallenge-microservico-pedido/Dockerfile .
        docker tag ms-pedido-img:latest ${{ secrets.DOCKER_HUB_URL }}:ms-pedido-img
        docker push ${{ secrets.DOCKER_HUB_URL }}:ms-pedido-img


  override-configmap:
    runs-on: ubuntu-latest
    env:
      QUEUE_URL: ${{ secrets.QUEUE_URL }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      MY_SECRET: ${{ secrets.MY_SECRET }}
      AWS_REGISTRY_URL: ${{ secrets.AWS_REGISTRY_URL }}
      DOCKER_HUB_URL: ${{ secrets.DOCKER_HUB_URL }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Read template file
        id: read_template
        run: echo "::set-output name=content::$(cat configmap_template.yaml)"

      - name: Replace placeholders
        id: replace_placeholders
        run: |
          echo "${{ inputs.content }}" \
          > configmap.yaml
        
      - name: Deploy to EKS
        run: |
            cd src
            cd techchallenge-microservico-pedido
            aws eks --region ${{ secrets.AWS_REGION }} update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }}
            kubectl apply -f ./k8s/
            docker tag ms-pedido-img:latest ${{ secrets.AWS_REGISTRY_URL }}:ms-pedido-img
            docker push ${{ secrets.AWS_REGISTRY_URL }}:ms-pedido-img
