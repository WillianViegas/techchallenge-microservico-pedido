version: '3.4'

services:
  techchallenge-microservico-pedido:
    image: ${DOCKER_REGISTRY-}techchallengemicroservicopedido
    build:
      context: .
      dockerfile: techchallenge-microservico-pedido/Dockerfile
    ports:
      - "7007:80"
      - "7008:443"
    networks:
      - prod-network
    environment:
      DatabaseConfig__ConnectionString: 'mongodb://admin:abc123!@mongodb-ms-pedido:27017'
      DatabaseConfig__DatabaseName: 'ms-pedido-db'
      DatabaseConfig__User: 'admin'
      QueueUrl: ''
      LocalStack__Config__LocalStackHost: 'localstack'
      LocalStack__UseLocalStack: false
      SQSConfig__UseLocalStack: false
      SQSConfig__CreateTestQueue: false
      SQSConfig__SendTestMessage: false
      DatabaseConfig__Password: 'abc123!'
      AWS_ACCESS_KEY_ID: ''
      AWS_SECRET_ACCESS_KEY: ''
      AWS_REGION: 'us-east-1'
      MY_SECRET: ''
    depends_on:
      - mongodb
      - localstack

  localstack:
    container_name: "${LOCALSTACK_DOCKER_NAME-localstack_ms}"
    image: localstack/localstack:latest
    ports:
      - "4510-4559:4510-4559"
      - "4566:4566"
    networks:
      - prod-network
    environment:
      AWS_DEFAULT_REGION: us-east-1
      SERVICES: sqs, s3

  mongodb:
    image: mongo:latest
    networks:
      - prod-network
    container_name: mongodb-ms-pedido
    environment:
      MONGO_INITDB_ROOT_USERNAME: 'admin'
      MONGO_INITDB_ROOT_PASSWORD: 'abc123!'

networks:
  prod-network:
    driver: bridge